---
// src/components/Navbar.astro

// Detectar la pÃ¡gina actual
const currentPath = Astro.url.pathname;
const isHomePage = currentPath === '/' || currentPath === '';
---

<!-- Banner superior estilo eco.com -->
<div class="top-banner">
    <div class="max-w-7xl mx-auto px-6 py-3">
        <div class="flex items-center justify-between">
            <div class="flex items-center space-x-4 text-sm text-white/80">
                <span>ðŸš€ CuarahÃ­ Portal: Accede a mÃ¡s de 3 espacios de innovaciÃ³n con tarifas preferenciales.</span>
                <a href="#espacios" class="banner-link">Explorar Ahora</a>
            </div>
            <button class="banner-close-btn" aria-label="Cerrar banner">
                <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
                </svg>
            </button>
        </div>
    </div>
</div>

<nav class="navbar-eco">
    <div class="navbar-container">
        <!-- Enlaces externos izquierda (ocultos en mÃ³vil) -->
        <div class="external-links-left">
            <a href="/trabajos" class="external-link">
                <span>TRABAJOS</span>
                <svg class="w-3 h-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14"></path>
                </svg>
            </a>
        </div>

        <!-- Navbar central con glassmorphism -->
        <div class="navbar-center">
            <!-- Logo -->
            <a href="/" class="logo-container">
                <div class="logo-glass-nav">
                    <!-- Logo SVG simplificado -->
                    <svg class="logo-svg-nav" viewBox="0 0 489.45 519.08" xmlns="http://www.w3.org/2000/svg">
                        <path fill="#fe3a14" d="M489.45.04c-.32,60.53-27.96,121.12-85.65,145.86-50.96,21.86-119.15,6.28-173.84,11.16-14.88,1.33-35.42,12.75-46.04,22.96-57.5,55.27-30.3,179.47,54.99,185.06,40.32,2.64,83.53-2.21,124.08-.08,7.97.42,17.55,2.38,24.71,4.29,67.61,18.05,101.87,82.81,101.75,149.75l-275.55.04c-282.46-20.93-287.94-500.6,0-519.08l275.55.04Z"/>
                        <path fill="#f7931e" d="M271.35,249.7c.85-3.54,1.51-7.15,2.16-10.63,2.1-11.34,4.27-23.08,12.86-36.3,7.38-11.36,17.69-20.96,30.75-28.7-8.18-2.49-16.85-3.84-25.84-3.84-5.1,0-10.01.44-14.7,1.28-5.73,4.86-10.56,10.26-14.42,16.21-7.4,11.39-9.29,21.57-11.28,32.34-.67,3.62-1.36,7.36-2.27,11.18-5.42,22.66-17.9,44.39-37.19,64.86,4.07,8.04,9.53,15.8,16.14,22.74,23.29-21.74,38.01-44.96,43.79-69.12Z"/>
                    </svg>
                </div>
                <span class="brand-text-nav">cuarahÃ­</span>
            </a>
            
            <!-- Separador visual -->
            <div class="nav-separator"></div>
            
            <!-- NavegaciÃ³n principal -->
            <div class="nav-links-desktop">
                <a href="/espacios" class="nav-link">Espacios</a>
                <a href="/blog" class="nav-link">Blog</a>
                <a href="/soporte" class="nav-link">Soporte</a>
                <a href="/contacto" class="nav-link">Contacto</a>
            </div>
        </div>

        <!-- Enlaces externos derecha -->
        <div class="external-links-right">
            <a href="/discord" class="external-link">
                <span>DISCORD</span>
                <svg class="w-3 h-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14"></path>
                </svg>
            </a>
            <a href="/twitter" class="external-link">
                <span>X</span>
                <svg class="w-3 h-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14"></path>
                </svg>
            </a>
        </div>

        <!-- BotÃ³n menÃº mÃ³vil -->
        <button id="mobile-menu-button" class="mobile-menu-btn">
            <span class="hamburger-line"></span>
            <span class="hamburger-line"></span>
            <span class="hamburger-line"></span>
        </button>
    </div>

    <!-- MenÃº mÃ³vil -->
    <div id="mobile-menu" class="mobile-menu">
        <div class="mobile-menu-content">
            <div class="mobile-nav-links">
                <a href="/espacios" class="mobile-nav-link">Espacios</a>
                <a href="/blog" class="mobile-nav-link">Blog</a>
                <a href="/soporte" class="mobile-nav-link">Soporte</a>
                <a href="/contacto" class="mobile-nav-link">Contacto</a>
            </div>
            
            <div class="mobile-external-links">
                <a href="/trabajos" class="mobile-external-link">TRABAJOS â†—</a>
                <a href="/discord" class="mobile-external-link">DISCORD â†—</a>
                <a href="/twitter" class="mobile-external-link">X â†—</a>
            </div>
        </div>
    </div>
</nav>


<script>
document.addEventListener('DOMContentLoaded', function() {
    const mobileMenuButton = document.getElementById('mobile-menu-button');
    const mobileMenu = document.getElementById('mobile-menu');
    const navbar = document.querySelector('.navbar-eco') as HTMLElement | null;
    const hamburgerLines = document.querySelectorAll('.hamburger-line');
    let isOpen = false;

    // Mobile menu toggle
    if (mobileMenuButton && mobileMenu) {
        mobileMenuButton.addEventListener('click', function() {
            isOpen = !isOpen;
            mobileMenuButton.setAttribute('aria-expanded', String(isOpen));

            if (isOpen) {
                mobileMenu.classList.add('show', 'animate-slide-down');
                // Animar hamburguesa a X
                if (hamburgerLines[0]) (hamburgerLines[0] as HTMLElement).style.transform = 'rotate(45deg) translate(6px, 6px)';
                if (hamburgerLines[1]) (hamburgerLines[1] as HTMLElement).style.opacity = '0';
                if (hamburgerLines[2]) (hamburgerLines[2] as HTMLElement).style.transform = 'rotate(-45deg) translate(6px, -6px)';
            } else {
                mobileMenu.classList.remove('show', 'animate-slide-down');
                // Restaurar hamburguesa
                hamburgerLines.forEach(line => {
                    const element = line as HTMLElement;
                    if (element) {
                        element.style.transform = '';
                        element.style.opacity = '';
                    }
                });
            }
        });

        // Cerrar menÃº mÃ³vil al hacer clic en enlaces
        const mobileLinks = mobileMenu.querySelectorAll('a');
        mobileLinks.forEach(link => {
            link.addEventListener('click', function() {
                isOpen = false;
                mobileMenuButton.setAttribute('aria-expanded', 'false');
                mobileMenu.classList.remove('show', 'animate-slide-down');
                hamburgerLines.forEach(line => {
                    const element = line as HTMLElement;
                    if (element) {
                        element.style.transform = '';
                        element.style.opacity = '';
                    }
                });
            });
        });

        // Cerrar menÃº mÃ³vil al hacer clic fuera
        document.addEventListener('click', (e) => {
            const target = e.target as Node;
            if (!mobileMenuButton.contains(target) && !mobileMenu.contains(target)) {
                if (isOpen) {
                    isOpen = false;
                    mobileMenuButton.setAttribute('aria-expanded', 'false');
                    mobileMenu.classList.remove('show', 'animate-slide-down');
                    hamburgerLines.forEach(line => {
                        const element = line as HTMLElement;
                        if (element) {
                            element.style.transform = '';
                            element.style.opacity = '';
                        }
                    });
                }
            }
        });
    }

    // Navbar scroll effect
    let scrolled = false;
    
    function updateNavbar() {
        const shouldBeScrolled = window.scrollY > 100;
        
        if (shouldBeScrolled !== scrolled) {
            scrolled = shouldBeScrolled;
            
            if (scrolled) {
                navbar?.classList.add('navbar-scrolled');
            } else {
                navbar?.classList.remove('navbar-scrolled');
            }
        }
    }

    // Throttled scroll listener
    let ticking = false;
    
    function onScroll() {
        if (!ticking) {
            requestAnimationFrame(() => {
                updateNavbar();
                ticking = false;
            });
            ticking = true;
        }
    }
    
    window.addEventListener('scroll', onScroll, { passive: true });
    
    // Inicializar estado
    updateNavbar();

    // Banner close functionality
    const bannerCloseBtn = document.querySelector('.banner-close-btn');
    const banner = document.querySelector('.top-banner') as HTMLElement | null;
    
    if (bannerCloseBtn && banner && navbar) {
        bannerCloseBtn.addEventListener('click', function() {
            banner.style.display = 'none';
            navbar.style.top = '0';
        });
    }
});
</script>