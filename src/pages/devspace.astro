---
// DevSpace.astro - P√°gina dedicada al espacio de desarrollo
// Enfocado en comunidad y aprendizaje colaborativo

import Layout from '../layouts/Layout.astro';

// Interfaces para tipado fuerte (Interface Segregation Principle)
interface DevTool {
  name: string;
  description: string;
  category: 'frontend' | 'backend' | 'mobile' | 'devops' | 'design';
  icon: string;
}

interface DevWorkshop {
  title: string;
  description: string;
  duration: string;
  level: 'Principiante' | 'Intermedio' | 'Avanzado';
  date: string;
  instructor: string;
}

interface CommunityBenefit {
  icon: string;
  title: string;
  description: string;
}

interface CommunityMember {
  name: string;
  role: string;
  avatar: string;
  specialty: string;
}

// Data Layer (Single Responsibility Principle)
const devTools: DevTool[] = [
  {
    name: 'Visual Studio Code',
    description: 'Editor de c√≥digo principal con extensiones especializadas',
    category: 'frontend',
    icon: 'üíª'
  },
  {
    name: 'Docker Desktop',
    description: 'Contenedores para desarrollo y despliegue',
    category: 'devops',
    icon: 'üê≥'
  },
  {
    name: 'Node.js Environment',
    description: 'Runtime JavaScript completo con npm y yarn',
    category: 'backend',
    icon: 'üü¢'
  },
  {
    name: 'React Native Setup',
    description: 'Entorno completo para desarrollo m√≥vil',
    category: 'mobile',
    icon: 'üì±'
  },
  {
    name: 'Figma & Adobe Creative',
    description: 'Herramientas de dise√±o UI/UX profesionales',
    category: 'design',
    icon: 'üé®'
  },
  {
    name: 'PostgreSQL & MongoDB',
    description: 'Bases de datos relacionales y NoSQL',
    category: 'backend',
    icon: 'üóÑÔ∏è'
  }
];

const workshops: DevWorkshop[] = [
  {
    title: 'Fundamentos de React',
    description: 'Aprende los conceptos b√°sicos de React y construye tu primera aplicaci√≥n',
    duration: '4 horas',
    level: 'Principiante',
    date: '15 Julio 2025',
    instructor: 'Mar√≠a Gonz√°lez'
  },
  {
    title: 'API REST con Node.js',
    description: 'Desarrollo de APIs robustas usando Express y mejores pr√°cticas',
    duration: '6 horas',
    level: 'Intermedio',
    date: '22 Julio 2025',
    instructor: 'Carlos Mendoza'
  },
  {
    title: 'DevOps con Docker',
    description: 'Containerizaci√≥n y despliegue de aplicaciones en la nube',
    duration: '8 horas',
    level: 'Avanzado',
    date: '29 Julio 2025',
    instructor: 'Ana Rodr√≠guez'
  }
];

const communityBenefits: CommunityBenefit[] = [
  {
    icon: 'ü§ù',
    title: 'Networking Profesional',
    description: 'Conecta con desarrolladores de diferentes niveles y especialidades para hacer crecer tu red profesional'
  },
  {
    icon: 'üöÄ',
    title: 'Proyectos Colaborativos',
    description: 'Participa en proyectos reales junto a otros miembros y construye un portafolio s√≥lido'
  },
  {
    icon: 'üìö',
    title: 'Aprendizaje Continuo',
    description: 'Acceso a workshops, mentor√≠as y recursos exclusivos para mantenerte actualizado'
  },
  {
    icon: 'üí°',
    title: 'Intercambio de Ideas',
    description: 'Espacios de discusi√≥n para resolver problemas, compartir soluciones y generar innovaci√≥n'
  },
  {
    icon: 'üèÜ',
    title: 'Hackathons y Retos',
    description: 'Eventos exclusivos para poner a prueba tus habilidades y ganar reconocimiento'
  },
  {
    icon: 'üéØ',
    title: 'Mentor√≠a Especializada',
    description: 'Guidance personalizado de desarrolladores senior para acelerar tu crecimiento'
  }
];

const communityMembers: CommunityMember[] = [
  {
    name: 'Ana Mart√≠nez',
    role: 'Senior Frontend Developer',
    avatar: 'üë©‚Äçüíª',
    specialty: 'React & Vue.js'
  },
  {
    name: 'Carlos Vega',
    role: 'DevOps Engineer',
    avatar: 'üë®‚Äçüíª',
    specialty: 'AWS & Kubernetes'
  },
  {
    name: 'Luis Fern√°ndez',
    role: 'Mobile Developer',
    avatar: 'üë®‚Äçüíª',
    specialty: 'React Native & Flutter'
  },
  {
    name: 'Mar√≠a Gonz√°lez',
    role: 'Full Stack Developer',
    avatar: 'üë©‚Äçüíª',
    specialty: 'MERN Stack'
  }
];
---

<Layout title="DevSpace - Cuarah√≠" description="Espacio colaborativo para desarrolladores en Cuarah√≠">
  <main class="devspace-page">
    <!-- Hero Section -->
    <section class="hero-section">
      <div class="hero-container">
        <div class="hero-content">
          <div class="hero-badge">
            <span class="badge-icon">üë®‚Äçüíª</span>
            <span class="badge-text">DevSpace</span>
          </div>
          
          <h1 class="hero-title">
            El espacio perfecto para 
            <span class="highlight-text">desarrolladores</span>
          </h1>
          
          <p class="hero-description">
            Un ambiente colaborativo equipado con la mejor tecnolog√≠a para que puedas 
            codear, aprender y crear proyectos incre√≠bles junto a otros desarrolladores.
          </p>
          
          <div class="hero-actions">
            <button class="cta-primary">
              <span>√önete a la comunidad</span>
              <svg class="cta-icon" viewBox="0 0 20 20" fill="currentColor">
                <path fill-rule="evenodd" d="M10.293 3.293a1 1 0 011.414 0l6 6a1 1 0 010 1.414l-6 6a1 1 0 01-1.414-1.414L14.586 11H3a1 1 0 110-2h11.586l-4.293-4.293a1 1 0 010-1.414z" clip-rule="evenodd" />
              </svg>
            </button>
            <button class="cta-secondary">Conocer la comunidad</button>
          </div>
        </div>
        
        <div class="hero-visual">
          <div class="floating-card card-1">
            <div class="card-header">
              <div class="card-dots">
                <span class="dot red"></span>
                <span class="dot yellow"></span>
                <span class="dot green"></span>
              </div>
              <span class="card-title">main.js</span>
            </div>
            <div class="card-content">
              <div class="code-line">
                <span class="code-keyword">const</span>
                <span class="code-var">app</span> = 
                <span class="code-function">express</span>();
              </div>
              <div class="code-line">
                <span class="code-keyword">app</span>.<span class="code-function">listen</span>(<span class="code-number">3000</span>);
              </div>
            </div>
          </div>
          
          <div class="floating-card card-2">
            <div class="card-icon">‚ö°</div>
            <div class="card-text">
              <div class="card-label">Build Status</div>
              <div class="card-value">Success</div>
            </div>
          </div>
        </div>
      </div>
    </section>

    <!-- Tools & Equipment Section -->
    <section class="tools-section">
      <div class="section-container">
        <div class="section-header">
          <h2 class="section-title">Herramientas y Software</h2>
          <p class="section-description">
            Todo lo que necesitas para desarrollar proyectos profesionales
          </p>
        </div>
        
        <div class="tools-grid">
          {devTools.map(tool => (
            <div class="tool-card" data-category={tool.category}>
              <div class="tool-icon">{tool.icon}</div>
              <div class="tool-content">
                <h3 class="tool-name">{tool.name}</h3>
                <p class="tool-description">{tool.description}</p>
                <span class="tool-category">{tool.category}</span>
              </div>
            </div>
          ))}
        </div>
      </div>
    </section>

    <!-- Workshops Section -->
    <section class="workshops-section">
      <div class="section-container">
        <div class="section-header">
          <h2 class="section-title">Pr√≥ximos Workshops</h2>
          <p class="section-description">
            Aprende nuevas tecnolog√≠as con expertos de la industria
          </p>
        </div>
        
        <div class="workshops-grid">
          {workshops.map(workshop => (
            <div class="workshop-card">
              <div class="workshop-header">
                <div class="workshop-level">{workshop.level}</div>
                <div class="workshop-duration">{workshop.duration}</div>
              </div>
              
              <div class="workshop-content">
                <h3 class="workshop-title">{workshop.title}</h3>
                <p class="workshop-description">{workshop.description}</p>
                
                <div class="workshop-meta">
                  <div class="workshop-date">
                    <svg class="meta-icon" viewBox="0 0 20 20" fill="currentColor">
                      <path fill-rule="evenodd" d="M6 2a1 1 0 00-1 1v1H4a2 2 0 00-2 2v10a2 2 0 002 2h12a2 2 0 002-2V6a2 2 0 00-2-2h-1V3a1 1 0 10-2 0v1H7V3a1 1 0 00-1-1zm0 5a1 1 0 000 2h8a1 1 0 100-2H6z" clip-rule="evenodd" />
                    </svg>
                    <span>{workshop.date}</span>
                  </div>
                  <div class="workshop-instructor">
                    <svg class="meta-icon" viewBox="0 0 20 20" fill="currentColor">
                      <path fill-rule="evenodd" d="M10 9a3 3 0 100-6 3 3 0 000 6zm-7 9a7 7 0 1114 0H3z" clip-rule="evenodd" />
                    </svg>
                    <span>{workshop.instructor}</span>
                  </div>
                </div>
              </div>
              
              <button class="workshop-cta">Unirse al workshop</button>
            </div>
          ))}
        </div>
      </div>
    </section>

    <!-- Community Benefits Section -->
    <section class="community-section">
      <div class="section-container">
        <div class="section-header">
          <h2 class="section-title">√önete a Nuestra Comunidad</h2>
          <p class="section-description">
            M√°s que un espacio de trabajo, somos una comunidad de desarrolladores apasionados por la tecnolog√≠a
          </p>
        </div>
        
        <div class="benefits-grid">
          {communityBenefits.map(benefit => (
            <div class="benefit-card">
              <div class="benefit-icon">{benefit.icon}</div>
              <div class="benefit-content">
                <h3 class="benefit-title">{benefit.title}</h3>
                <p class="benefit-description">{benefit.description}</p>
              </div>
            </div>
          ))}
        </div>
        
        <div class="community-stats">
          <div class="stat-item">
            <div class="stat-number">150+</div>
            <div class="stat-label">Desarrolladores Activos</div>
          </div>
          <div class="stat-item">
            <div class="stat-number">50+</div>
            <div class="stat-label">Proyectos Colaborativos</div>
          </div>
          <div class="stat-item">
            <div class="stat-number">200+</div>
            <div class="stat-label">Workshops Realizados</div>
          </div>
          <div class="stat-item">
            <div class="stat-number">95%</div>
            <div class="stat-label">Satisfacci√≥n Miembros</div>
          </div>
        </div>
      </div>
    </section>

    <!-- Community Members Section -->
    <section class="members-section">
      <div class="section-container">
        <div class="section-header">
          <h2 class="section-title">Conoce a Algunos Miembros</h2>
          <p class="section-description">
            Desarrolladores talentosos que forman parte activa de nuestra comunidad
          </p>
        </div>
        
        <div class="members-grid">
          {communityMembers.map(member => (
            <div class="member-card">
              <div class="member-avatar">{member.avatar}</div>
              <div class="member-info">
                <h3 class="member-name">{member.name}</h3>
                <p class="member-role">{member.role}</p>
                <span class="member-specialty">{member.specialty}</span>
              </div>
            </div>
          ))}
        </div>
        
        <div class="join-community-cta">
          <div class="join-content">
            <h3 class="join-title">¬øListo para formar parte de algo grande?</h3>
            <p class="join-description">
              Conecta con desarrolladores, aprende nuevas tecnolog√≠as y construye proyectos incre√≠bles
            </p>
            <button class="cta-primary join-btn">
              <span>Unirse ahora</span>
              <svg class="cta-icon" viewBox="0 0 20 20" fill="currentColor">
                <path d="M13 6a3 3 0 11-6 0 3 3 0 016 0zM18 8a2 2 0 11-4 0 2 2 0 014 0zM14 15a4 4 0 00-8 0v3h8v-3z"/>
              </svg>
            </button>
          </div>
        </div>
      </div>
    </section>

    <!-- Final CTA Section -->
    <section class="final-cta-section">
      <div class="cta-container">
        <div class="cta-content">
          <h2 class="cta-title">¬øListo para elevar tu carrera como developer?</h2>
          <p class="cta-description">
            √önete a DevSpace y forma parte de una comunidad donde el crecimiento profesional y personal van de la mano.
          </p>
          <div class="cta-actions">
            <button class="cta-primary">
              <span>Unirse a DevSpace</span>
              <svg class="cta-icon" viewBox="0 0 20 20" fill="currentColor">
                <path d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"/>
              </svg>
            </button>
            <button class="cta-secondary">Agendar visita</button>
          </div>
        </div>
      </div>
    </section>
  </main>
</Layout>

<style>
  /* DevSpace Color System - Amarillo vibrante y c√°lido */
  :root {
    --devspace-primary: #fbbf24; /* amber-400 */
    --devspace-primary-light: #fcd34d; /* amber-300 */
    --devspace-primary-dark: #f59e0b; /* amber-500 */
    --devspace-accent: #fef3c7; /* amber-100 - amarillo pastel */
    --devspace-accent-hover: #fde68a; /* amber-200 */
    --devspace-glow: rgba(251, 191, 36, 0.4);
    --devspace-gradient: linear-gradient(135deg, var(--devspace-primary) 0%, var(--devspace-primary-light) 100%);
    --devspace-warm-gradient: linear-gradient(135deg, #f59e0b 0%, #fbbf24 50%, #fcd34d 100%);
  }

  /* Global DevSpace Styles */
  .devspace-page {
    background: linear-gradient(180deg, #0f0f23 0%, #1a1a2e 100%);
    min-height: 100vh;
    color: white;
  }

  /* Hero Section */
  .hero-section {
    padding: 120px 0 80px;
    position: relative;
    overflow: hidden;
  }

  .hero-container {
    max-width: 1200px;
    margin: 0 auto;
    padding: 0 24px;
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: 60px;
    align-items: center;
  }

  .hero-badge {
    display: inline-flex;
    align-items: center;
    gap: 8px;
    background: var(--cuarahi-glass);
    border: 1px solid var(--cuarahi-glass-border);
    border-radius: 50px;
    padding: 8px 16px;
    margin-bottom: 24px;
    backdrop-filter: blur(10px);
  }

  .badge-icon {
    font-size: 20px;
  }

  .badge-text {
    font-size: 14px;
    font-weight: 500;
    color: var(--devspace-primary);
  }

  .hero-title {
    font-size: clamp(2.5rem, 5vw, 4rem);
    font-weight: 700;
    line-height: 1.1;
    margin-bottom: 20px;
    text-shadow: 0 0 30px rgba(255, 255, 255, 0.1);
  }

  .highlight-text {
    background: var(--devspace-warm-gradient);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
    text-shadow: 0 0 20px var(--devspace-glow);
  }

  .hero-description {
    font-size: 18px;
    line-height: 1.6;
    color: rgba(255, 255, 255, 0.8);
    margin-bottom: 32px;
    max-width: 500px;
  }

  .hero-actions {
    display: flex;
    gap: 16px;
    flex-wrap: wrap;
  }

  .cta-primary {
    display: inline-flex;
    align-items: center;
    gap: 8px;
    background: var(--devspace-warm-gradient);
    color: #1a1a2e;
    border: none;
    border-radius: 50px;
    padding: 16px 32px;
    font-size: 16px;
    font-weight: 600;
    cursor: pointer;
    transition: all 0.3s ease;
    box-shadow: 0 0 30px var(--devspace-glow);
  }

  .cta-primary:hover {
    transform: translateY(-2px);
    box-shadow: 0 0 40px var(--devspace-glow);
  }

  .cta-secondary {
    background: var(--cuarahi-glass);
    color: white;
    border: 1px solid var(--cuarahi-glass-border);
    border-radius: 50px;
    padding: 16px 32px;
    font-size: 16px;
    font-weight: 500;
    cursor: pointer;
    transition: all 0.3s ease;
    backdrop-filter: blur(10px);
  }

  .cta-secondary:hover {
    background: var(--cuarahi-glass-hover);
    transform: translateY(-2px);
  }

  .cta-icon {
    width: 20px;
    height: 20px;
  }

  /* Hero Visual */
  .hero-visual {
    position: relative;
    height: 400px;
  }

  .floating-card {
    position: absolute;
    background: var(--cuarahi-glass);
    border: 1px solid var(--cuarahi-glass-border);
    border-radius: 12px;
    backdrop-filter: blur(10px);
    padding: 16px;
    box-shadow: 0 8px 32px rgba(132, 204, 22, 0.1);
    animation: float 6s ease-in-out infinite;
  }

  .card-1 {
    top: 20px;
    left: 0;
    width: 280px;
    border-left: 3px solid var(--devspace-primary);
  }

  .card-2 {
    bottom: 60px;
    right: 20px;
    width: 200px;
    display: flex;
    align-items: center;
    gap: 12px;
    animation-delay: -3s;
  }

  .card-header {
    display: flex;
    align-items: center;
    justify-content: space-between;
    margin-bottom: 12px;
    padding-bottom: 8px;
    border-bottom: 1px solid var(--cuarahi-glass-border);
  }

  .card-dots {
    display: flex;
    gap: 6px;
  }

  .dot {
    width: 8px;
    height: 8px;
    border-radius: 50%;
  }

  .dot.red { background: #ef4444; }
  .dot.yellow { background: #fbbf24; }
  .dot.green { background: var(--devspace-primary); }

  .card-title {
    font-size: 12px;
    color: rgba(255, 255, 255, 0.7);
  }

  .code-line {
    font-family: 'JetBrains Mono', monospace;
    font-size: 14px;
    margin-bottom: 4px;
  }

  .code-keyword { color: #c084fc; }
  .code-var { color: #60a5fa; }
  .code-function { color: var(--devspace-primary); }
  .code-number { color: var(--devspace-primary-light); }

  .card-icon {
    font-size: 24px;
  }

  .card-label {
    font-size: 12px;
    color: rgba(255, 255, 255, 0.6);
  }

  .card-value {
    font-size: 14px;
    font-weight: 600;
    color: var(--devspace-primary);
  }

  @keyframes float {
    0%, 100% { transform: translateY(0px); }
    50% { transform: translateY(-20px); }
  }

  /* Section Styles */
  .section-container {
    max-width: 1200px;
    margin: 0 auto;
    padding: 80px 24px;
  }

  .section-header {
    text-align: center;
    margin-bottom: 60px;
  }

  .section-title {
    font-size: clamp(2.5rem, 4vw, 3.5rem);
    font-weight: 700;
    margin-bottom: 16px;
    background: linear-gradient(135deg, white 0%, var(--devspace-accent) 100%);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
    text-shadow: 0 0 20px var(--devspace-glow);
  }

  .section-description {
    font-size: 18px;
    color: rgba(255, 255, 255, 0.7);
    max-width: 600px;
    margin: 0 auto;
    line-height: 1.6;
  }

  /* Tools Grid - Altura uniforme */
  .tools-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(320px, 1fr));
    gap: 24px;
  }

  .tool-card {
    background: var(--cuarahi-glass);
    border: 1px solid var(--cuarahi-glass-border);
    border-radius: 16px;
    padding: 24px;
    backdrop-filter: blur(10px);
    transition: all 0.3s ease;
    cursor: pointer;
    
    /* Flexbox para control de layout interno */
    display: flex;
    flex-direction: column;
    height: 100%; /* Altura completa del grid item */
    min-height: 280px; /* Altura m√≠nima garantizada */
  }

  .tool-card:hover {
    transform: translateY(-4px);
    border-color: var(--devspace-primary);
    box-shadow: 0 12px 40px var(--devspace-glow);
  }

  .tool-icon {
    font-size: 32px;
    margin-bottom: 16px;
    flex-shrink: 0; /* No se comprime */
  }

  .tool-content {
    flex: 1; /* Toma todo el espacio disponible */
    display: flex;
    flex-direction: column;
  }

  .tool-name {
    font-size: 20px;
    font-weight: 600;
    margin-bottom: 8px;
    color: white;
    flex-shrink: 0; /* No se comprime */
  }

  .tool-description {
    color: rgba(255, 255, 255, 0.7);
    line-height: 1.5;
    margin-bottom: 16px;
    flex: 1; /* Toma el espacio restante */
    display: flex;
    align-items: flex-start; /* Alinea al inicio */
  }

  .tool-category {
    display: inline-block;
    background: var(--devspace-warm-gradient);
    color: #1a1a2e;
    font-size: 12px;
    font-weight: 600;
    padding: 4px 12px;
    border-radius: 20px;
    text-transform: uppercase;
    letter-spacing: 0.5px;
    align-self: flex-start; /* Se alinea al inicio del contenedor */
    margin-top: auto; /* Se empuja hacia abajo */
  }

  /* Workshops Grid - Altura uniforme con CTA fijo */
  .workshops-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(350px, 1fr));
    gap: 32px;
  }

  .workshop-card {
    background: var(--cuarahi-glass);
    border: 1px solid var(--cuarahi-glass-border);
    border-radius: 20px;
    padding: 32px;
    backdrop-filter: blur(10px);
    transition: all 0.3s ease;
    position: relative;
    overflow: hidden;
    
    /* Flexbox para control de layout interno */
    display: flex;
    flex-direction: column;
    height: 100%; /* Altura completa del grid item */
    min-height: 420px; /* Altura m√≠nima garantizada */
  }

  .workshop-card::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    height: 3px;
    background: var(--devspace-warm-gradient);
  }

  .workshop-card:hover {
    transform: translateY(-8px);
    box-shadow: 0 20px 60px rgba(251, 191, 36, 0.25);
  }

  .workshop-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 20px;
    flex-shrink: 0; /* No se comprime */
  }

  .workshop-level {
    background: var(--devspace-primary);
    color: white;
    font-size: 12px;
    font-weight: 600;
    padding: 6px 12px;
    border-radius: 20px;
    text-transform: uppercase;
  }

  .workshop-duration {
    color: rgba(255, 255, 255, 0.6);
    font-size: 14px;
  }

  .workshop-content {
    flex: 1; /* Toma todo el espacio disponible */
    display: flex;
    flex-direction: column;
  }

  .workshop-title {
    font-size: 24px;
    font-weight: 700;
    margin-bottom: 12px;
    color: white;
    flex-shrink: 0; /* No se comprime */
  }

  .workshop-description {
    color: rgba(255, 255, 255, 0.7);
    line-height: 1.6;
    margin-bottom: 24px;
    flex: 1; /* Toma el espacio restante */
    display: flex;
    align-items: flex-start; /* Contenido al inicio */
  }

  .workshop-meta {
    display: flex;
    flex-direction: column;
    gap: 8px;
    margin-bottom: 24px;
    flex-shrink: 0; /* No se comprime */
  }

  .workshop-date,
  .workshop-instructor {
    display: flex;
    align-items: center;
    gap: 8px;
    color: rgba(255, 255, 255, 0.6);
    font-size: 14px;
  }

  .meta-icon {
    width: 16px;
    height: 16px;
    color: var(--devspace-primary);
  }

  .workshop-cta {
    width: 100%;
    background: var(--devspace-warm-gradient);
    color: #1a1a2e;
    border: none;
    border-radius: 12px;
    padding: 12px 24px;
    font-size: 16px;
    font-weight: 700;
    cursor: pointer;
    transition: all 0.3s ease;
    margin-top: auto; /* Se empuja hacia abajo */
    flex-shrink: 0; /* No se comprime */
  }

  .workshop-cta:hover {
    transform: translateY(-2px);
    box-shadow: 0 8px 25px var(--devspace-glow);
  }

  /* Community Benefits Grid */
  .benefits-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
    gap: 24px;
    margin-bottom: 60px;
  }

  .benefit-card {
    background: var(--cuarahi-glass);
    border: 1px solid var(--cuarahi-glass-border);
    border-radius: 16px;
    padding: 24px;
    backdrop-filter: blur(10px);
    transition: all 0.3s ease;
    
    /* Flexbox para control de layout interno */
    display: flex;
    flex-direction: column;
    height: 100%;
    min-height: 200px;
  }

  .benefit-card:hover {
    transform: translateY(-4px);
    border-color: var(--devspace-primary);
    box-shadow: 0 12px 40px var(--devspace-glow);
  }

  .benefit-icon {
    font-size: 40px;
    margin-bottom: 16px;
    flex-shrink: 0;
  }

  .benefit-content {
    flex: 1;
    display: flex;
    flex-direction: column;
  }

  .benefit-title {
    font-size: 20px;
    font-weight: 600;
    margin-bottom: 12px;
    color: white;
    flex-shrink: 0;
  }

  .benefit-description {
    color: rgba(255, 255, 255, 0.7);
    line-height: 1.6;
    flex: 1;
  }

  /* Community Stats */
  .community-stats {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
    gap: 32px;
    margin-top: 40px;
  }

  .stat-item {
    text-align: center;
    padding: 24px;
    background: var(--cuarahi-glass);
    border: 1px solid var(--cuarahi-glass-border);
    border-radius: 16px;
    backdrop-filter: blur(10px);
    transition: all 0.3s ease;
  }

  .stat-item:hover {
    transform: translateY(-2px);
    box-shadow: 0 8px 30px var(--devspace-glow);
  }

  .stat-number {
    font-size: 36px;
    font-weight: 800;
    color: var(--devspace-primary);
    margin-bottom: 8px;
    text-shadow: 0 0 20px var(--devspace-glow);
  }

  .stat-label {
    font-size: 14px;
    color: rgba(255, 255, 255, 0.8);
    font-weight: 500;
  }

  /* Members Section */
  .members-section {
    background: linear-gradient(180deg, transparent 0%, rgba(251, 191, 36, 0.03) 100%);
  }

  .members-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
    gap: 24px;
    margin-bottom: 60px;
  }

  .member-card {
    background: var(--cuarahi-glass);
    border: 1px solid var(--cuarahi-glass-border);
    border-radius: 20px;
    padding: 32px 24px;
    backdrop-filter: blur(10px);
    transition: all 0.3s ease;
    text-align: center;
    position: relative;
    overflow: hidden;
  }

  .member-card::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    height: 2px;
    background: var(--devspace-warm-gradient);
  }

  .member-card:hover {
    transform: translateY(-6px);
    box-shadow: 0 16px 50px rgba(251, 191, 36, 0.2);
  }

  .member-avatar {
    font-size: 48px;
    margin-bottom: 16px;
  }

  .member-info {
    display: flex;
    flex-direction: column;
    gap: 8px;
  }

  .member-name {
    font-size: 20px;
    font-weight: 700;
    color: white;
    margin: 0;
  }

  .member-role {
    font-size: 14px;
    color: rgba(255, 255, 255, 0.7);
    margin: 0;
  }

  .member-specialty {
    display: inline-block;
    background: var(--devspace-warm-gradient);
    color: #1a1a2e;
    font-size: 12px;
    font-weight: 600;
    padding: 6px 12px;
    border-radius: 20px;
    margin-top: 8px;
  }

  /* Join Community CTA */
  .join-community-cta {
    background: var(--cuarahi-glass);
    border: 1px solid var(--cuarahi-glass-border);
    border-radius: 24px;
    padding: 48px 32px;
    backdrop-filter: blur(10px);
    text-align: center;
    position: relative;
    overflow: hidden;
  }

  .join-community-cta::before {
    content: '';
    position: absolute;
    top: -50%;
    left: -50%;
    width: 200%;
    height: 200%;
    background: radial-gradient(circle, var(--devspace-glow) 0%, transparent 70%);
    opacity: 0.1;
    animation: pulse 4s ease-in-out infinite;
  }

  .join-content {
    position: relative;
    z-index: 1;
  }

  .join-title {
    font-size: 28px;
    font-weight: 700;
    margin-bottom: 16px;
    color: white;
    text-shadow: 0 0 20px rgba(255, 255, 255, 0.1);
  }

  .join-description {
    font-size: 16px;
    color: rgba(255, 255, 255, 0.8);
    margin-bottom: 32px;
    max-width: 500px;
    margin-left: auto;
    margin-right: auto;
    line-height: 1.6;
  }

  .join-btn {
    font-size: 18px;
    padding: 16px 32px;
    box-shadow: 0 8px 30px var(--devspace-glow);
  }

  .join-btn:hover {
    transform: translateY(-3px);
    box-shadow: 0 12px 40px var(--devspace-glow);
  }

  @keyframes pulse {
    0%, 100% { 
      transform: scale(1);
      opacity: 0.1;
    }
    50% { 
      transform: scale(1.05);
      opacity: 0.15;
    }
  }color: var(--devspace-primary);
  

  .price-period {
    font-size: 18px;
    color: rgba(255, 255, 255, 0.6);
  }

  .pricing-features {
    list-style: none;
    padding: 0;
    margin: 0 0 32px 0;
    flex: 1; /* Toma todo el espacio disponible */
    display: flex;
    flex-direction: column;
    gap: 8px; /* Espaciado uniforme entre features */
  }

  .feature-item {
    display: flex;
    align-items: center;
    gap: 12px;
    padding: 8px 0;
    color: rgba(255, 255, 255, 0.8);
  }

  .feature-check {
    width: 20px;
    height: 20px;
    color: var(--devspace-primary);
    flex-shrink: 0;
  }

  .pricing-cta {
    width: 100%;
    border: none;
    border-radius: 12px;
    padding: 16px 24px;
    font-size: 16px;
    font-weight: 600;
    cursor: pointer;
    transition: all 0.3s ease;
    margin-top: auto; /* Se empuja hacia abajo */
    flex-shrink: 0; /* No se comprime */
  }

  /* Final CTA Section */
  .final-cta-section {
    background: var(--devspace-warm-gradient);
    margin: 80px 0 0 0;
    position: relative;
    overflow: hidden;
  }

  .final-cta-section::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: linear-gradient(135deg, rgba(245, 158, 11, 0.95) 0%, rgba(251, 191, 36, 0.9) 50%, rgba(252, 211, 77, 0.85) 100%);
  }

  .cta-container {
    position: relative;
    z-index: 1;
    max-width: 800px;
    margin: 0 auto;
    padding: 80px 24px;
    text-align: center;
  }

  .cta-title {
    font-size: clamp(2rem, 4vw, 3rem);
    font-weight: 700;
    margin-bottom: 16px;
    color: #1a1a2e;
    text-shadow: 0 2px 10px rgba(26, 26, 46, 0.1);
  }

  .cta-description {
    font-size: 18px;
    line-height: 1.6;
    color: rgba(26, 26, 46, 0.8);
    margin-bottom: 32px;
    max-width: 600px;
    margin-left: auto;
    margin-right: auto;
  }

  .cta-actions {
    display: flex;
    gap: 16px;
    justify-content: center;
    flex-wrap: wrap;
  }

  .final-cta-section .cta-primary {
    background: #1a1a2e;
    color: var(--devspace-primary);
    box-shadow: 0 8px 30px rgba(26, 26, 46, 0.4);
    border: 2px solid rgba(26, 26, 46, 0.8);
  }

  .final-cta-section .cta-primary:hover {
    transform: translateY(-2px);
    box-shadow: 0 12px 40px rgba(26, 26, 46, 0.6);
    background: #0f0f23;
  }

  .final-cta-section .cta-secondary {
    background: transparent;
    color: #1a1a2e;
    border: 2px solid #1a1a2e;
    backdrop-filter: none;
    font-weight: 600;
  }

  .final-cta-section .cta-secondary:hover {
    background: #1a1a2e;
    color: var(--devspace-primary);
  }

  /* Mobile Responsive Design */
  @media (max-width: 768px) {
    .hero-container {
      grid-template-columns: 1fr;
      gap: 40px;
      text-align: center;
    }

    .hero-visual {
      height: 300px;
    }

    .card-1 {
      width: 240px;
      left: 50%;
      transform: translateX(-50%);
    }

    .card-2 {
      width: 180px;
      right: 50%;
      transform: translateX(50%);
      bottom: 40px;
    }

    .tools-grid {
      grid-template-columns: 1fr;
    }

    .workshops-grid {
      grid-template-columns: 1fr;
    }

    .pricing-grid {
      grid-template-columns: 1fr;
    }

    .hero-actions {
      justify-content: center;
    }

    .cta-actions {
      flex-direction: column;
      align-items: center;
    }

    .cta-primary,
    .cta-secondary {
      width: 100%;
      max-width: 280px;
    }

    .workshop-header {
      flex-direction: column;
      gap: 8px;
      align-items: flex-start;
    }

    .section-container {
      padding: 60px 24px;
    }
  }

  @media (max-width: 480px) {
    .hero-section {
      padding: 100px 0 60px;
    }

    .section-container {
      padding: 40px 16px;
    }

    .tool-card,
    .workshop-card,
    .pricing-card {
      padding: 20px;
    }

    .hero-visual {
      height: 250px;
    }

    .floating-card {
      padding: 12px;
    }

    .card-1 {
      width: 200px;
    }

    .card-2 {
      width: 160px;
    }
  }

  /* Animation Classes for Intersection Observer */
  .animate-on-scroll {
    opacity: 0;
    transform: translateY(30px);
    transition: all 0.8s ease;
  }

  .animate-on-scroll.animate-in {
    opacity: 1;
    transform: translateY(0);
  }

  /* Performance optimizations */
  .tool-card,
  .workshop-card,
  .pricing-card {
    will-change: transform;
  }

  .floating-card {
    will-change: transform;
  }

  /* Accessibility improvements */
  @media (prefers-reduced-motion: reduce) {
    .floating-card {
      animation: none;
    }

    .tool-card:hover,
    .workshop-card:hover,
    .pricing-card:hover,
    .cta-primary:hover,
    .cta-secondary:hover,
    .workshop-cta:hover {
      transform: none;
    }

    .animate-on-scroll {
      transition: opacity 0.3s ease;
      transform: none;
    }
  }

  /* High contrast mode support */
  @media (prefers-contrast: high) {
    .tool-card,
    .workshop-card,
    .pricing-card {
      border-width: 2px;
    }

    .highlight-text {
      text-shadow: none;
      color: var(--devspace-primary);
    }
  }

  /* Focus states for accessibility */
  .cta-primary:focus,
  .cta-secondary:focus,
  .workshop-cta:focus,
  .pricing-cta:focus {
    outline: 2px solid var(--devspace-primary);
    outline-offset: 2px;
  }

  /* Loading states */
  .tool-card,
  .workshop-card,
  .pricing-card {
    contain: layout style paint;
  }
</style>

<script>
  // Intersection Observer for scroll animations (Open/Closed Principle)
  class ScrollAnimationManager {
    private observer: IntersectionObserver;
    
    constructor() {
      this.observer = new IntersectionObserver(
        this.handleIntersection.bind(this),
        {
          threshold: 0.1,
          rootMargin: '0px 0px -50px 0px'
        }
      );
      this.init();
    }
    
    private handleIntersection(entries: IntersectionObserverEntry[]): void {
      entries.forEach(entry => {
        const element = entry.target as HTMLElement;
        if (entry.isIntersecting) {
          element.classList.add('animate-in');
        }
      });
    }
    
    private init(): void {
      // Add animation class to all cards
      const animatedElements = document.querySelectorAll(
        '.tool-card, .workshop-card, .pricing-card, .section-header'
      );
      
      animatedElements.forEach(el => {
        el.classList.add('animate-on-scroll');
        this.observer.observe(el);
      });
    }
  }

  // Category Filter for Tools (Single Responsibility Principle)
  class ToolCategoryFilter {
    private tools: NodeListOf<Element>;
    private activeCategory: string = 'all';
    
    constructor() {
      this.tools = document.querySelectorAll('.tool-card');
      this.init();
    }
    
    private init(): void {
      // Create filter buttons
      this.createFilterButtons();
    }
    
    private createFilterButtons(): void {
      const toolsSection = document.querySelector('.tools-section .section-header');
      if (!toolsSection) return;
      
      const filterContainer = document.createElement('div');
      filterContainer.className = 'filter-container';
      filterContainer.style.cssText = `
        display: flex;
        gap: 12px;
        justify-content: center;
        margin-top: 24px;
        flex-wrap: wrap;
      `;
      
      const categories = ['all', 'frontend', 'backend', 'mobile', 'devops', 'design'];
      const categoryLabels = {
        all: 'Todas',
        frontend: 'Frontend',
        backend: 'Backend', 
        mobile: 'Mobile',
        devops: 'DevOps',
        design: 'Dise√±o'
      };
      
      categories.forEach(category => {
        const button = document.createElement('button');
        button.textContent = categoryLabels[category as keyof typeof categoryLabels];
        button.className = `filter-btn ${category === 'all' ? 'active' : ''}`;
        button.style.cssText = `
          background: ${category === 'all' ? 'var(--devspace-primary)' : 'var(--cuarahi-glass)'};
          color: ${category === 'all' ? '#1a1a2e' : 'white'};
          border: 1px solid ${category === 'all' ? 'var(--devspace-primary)' : 'var(--cuarahi-glass-border)'};
          border-radius: 25px;
          padding: 8px 16px;
          font-size: 14px;
          font-weight: ${category === 'all' ? '600' : '500'};
          cursor: pointer;
          transition: all 0.3s ease;
          backdrop-filter: blur(10px);
        `;
        
        button.addEventListener('click', () => this.filterTools(category));
        button.addEventListener('mouseenter', () => {
          if (!button.classList.contains('active')) {
            button.style.background = 'var(--cuarahi-glass-hover)';
          }
        });
        button.addEventListener('mouseleave', () => {
          if (!button.classList.contains('active')) {
            button.style.background = 'var(--cuarahi-glass)';
          }
        });
        
        filterContainer.appendChild(button);
      });
      
      toolsSection.appendChild(filterContainer);
    }
    
    private filterTools(category: string): void {
      this.activeCategory = category;
      
      // Update button states
      document.querySelectorAll('.filter-btn').forEach(btn => {
        const button = btn as HTMLElement;
        const isActive = button.textContent === this.getCategoryLabel(category);
        button.classList.toggle('active', isActive);
        button.style.background = isActive ? 'var(--devspace-primary)' : 'var(--cuarahi-glass)';
        button.style.borderColor = isActive ? 'var(--devspace-primary)' : 'var(--cuarahi-glass-border)';
        button.style.color = isActive ? '#1a1a2e' : 'white';
        button.style.fontWeight = isActive ? '600' : '500';
      });
      
      // Filter tools
      this.tools.forEach(tool => {
        const toolElement = tool as HTMLElement;
        const toolCategory = toolElement.dataset.category;
        const shouldShow = category === 'all' || toolCategory === category;
        
        toolElement.style.transform = shouldShow ? 'scale(1)' : 'scale(0.8)';
        toolElement.style.opacity = shouldShow ? '1' : '0.3';
        toolElement.style.pointerEvents = shouldShow ? 'auto' : 'none';
      });
    }
    
    private getCategoryLabel(category: string): string {
      const labels = {
        all: 'Todas',
        frontend: 'Frontend',
        backend: 'Backend',
        mobile: 'Mobile',
        devops: 'DevOps',
        design: 'Dise√±o'
      };
      return labels[category as keyof typeof labels];
    }
  }

  // Form Handler for CTAs (Dependency Inversion Principle)
  interface FormHandler {
    handle(formData: FormData): Promise<void>;
  }

  class DevSpaceRegistrationHandler implements FormHandler {
    async handle(formData: FormData): Promise<void> {
      // Implementation would connect to actual registration system
      console.log('DevSpace registration:', Object.fromEntries(formData));
      
      // Show success message
      this.showSuccessMessage();
    }
    
    private showSuccessMessage(): void {
      const message = document.createElement('div');
      message.style.cssText = `
        position: fixed;
        top: 20px;
        right: 20px;
        background: var(--devspace-warm-gradient);
        color: #1a1a2e;
        padding: 16px 24px;
        border-radius: 12px;
        box-shadow: 0 8px 30px var(--devspace-glow);
        z-index: 1000;
        font-weight: 600;
        animation: slideIn 0.3s ease;
      `;
      message.textContent = '¬°Bienvenido a la comunidad DevSpace! üéâ';
      
      document.body.appendChild(message);
      
      setTimeout(() => {
        message.remove();
      }, 4000);
    }
  }

    // Initialize all functionality when DOM is loaded
    document.addEventListener('DOMContentLoaded', () => {
      // Initialize scroll animations
      new ScrollAnimationManager();
      
      // Initialize tool filtering
      new ToolCategoryFilter();
      
      // Initialize form handlers
      const registrationHandler = new DevSpaceRegistrationHandler();
      
      // Attach event listeners to CTA buttons
      document.querySelectorAll('.cta-primary, .workshop-cta, .join-btn').forEach(button => {
        button.addEventListener('click', async (e) => {
          e.preventDefault();
          
          // Create mock form data
          const formData = new FormData();
          formData.append('action', 'join_community');
          formData.append('space', 'devspace');
          
          await registrationHandler.handle(formData);
        });
      });
      
      // Add keyboard navigation support
      document.addEventListener('keydown', (e) => {
        if (e.key === 'Tab') {
          document.body.classList.add('keyboard-navigation');
        }
      });
      
      document.addEventListener('mousedown', () => {
        document.body.classList.remove('keyboard-navigation');
      });
      
      // Add staggered animation for community stats
      const statItems = document.querySelectorAll('.stat-item');
      const observer = new IntersectionObserver((entries) => {
        entries.forEach((entry, index) => {
          if (entry.isIntersecting) {
            setTimeout(() => {
              entry.target.classList.add('animate-in');
            }, index * 150);
          }
        });
      }, { threshold: 0.1 });
      
      statItems.forEach(item => {
        item.classList.add('animate-on-scroll');
        observer.observe(item);
      });
      
      // Add member cards animation
      const memberCards = document.querySelectorAll('.member-card');
      memberCards.forEach((card, index) => {
        card.style.animationDelay = `${index * 100}ms`;
        card.classList.add('member-reveal');
      });
    });

  // Add CSS for slide-in animation and member reveals
  const style = document.createElement('style');
  style.textContent = `
    @keyframes slideIn {
      from {
        transform: translateX(100%);
        opacity: 0;
      }
      to {
        transform: translateX(0);
        opacity: 1;
      }
    }
    
    @keyframes memberReveal {
      from {
        opacity: 0;
        transform: translateY(30px) scale(0.9);
      }
      to {
        opacity: 1;
        transform: translateY(0) scale(1);
      }
    }
    
    .member-reveal {
      animation: memberReveal 0.6s ease forwards;
      opacity: 0;
    }
    
    .keyboard-navigation button:focus,
    .keyboard-navigation .tool-card:focus,
    .keyboard-navigation .workshop-card:focus,
    .keyboard-navigation .benefit-card:focus,
    .keyboard-navigation .member-card:focus {
      outline: 2px solid var(--devspace-primary);
      outline-offset: 2px;
    }
    
    /* Responsive adjustments for community sections */
    @media (max-width: 768px) {
      .benefits-grid {
        grid-template-columns: 1fr;
      }
      
      .community-stats {
        grid-template-columns: repeat(2, 1fr);
        gap: 16px;
      }
      
      .members-grid {
        grid-template-columns: repeat(2, 1fr);
        gap: 16px;
      }
      
      .join-community-cta {
        padding: 32px 20px;
      }
      
      .join-title {
        font-size: 24px;
      }
      
      .stat-number {
        font-size: 28px;
      }
    }
    
    @media (max-width: 480px) {
      .community-stats {
        grid-template-columns: 1fr;
      }
      
      .members-grid {
        grid-template-columns: 1fr;
      }
      
      .benefit-card {
        min-height: 180px;
      }
      
      .member-card {
        padding: 24px 16px;
      }
      
      .member-avatar {
        font-size: 36px;
      }
    }
  `
  document.head.appendChild(style);
</script>